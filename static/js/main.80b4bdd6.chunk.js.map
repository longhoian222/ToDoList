{"version":3,"sources":["components/Home/Header/Header.js","pages/About/About.js","pages/Contact/Contact.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/Login/Login.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/TodoList/Todolist.js","pages/TodoList/TodolistRFC.js","App.js","serviceWorker.js","redux/ConfigStore.js","index.js"],"names":["Header","className","to","type","id","activeClassName","activeStyle","fontWeight","href","placeholder","About","Contact","Detail","props","match","params","path","Home","Login","useState","userName","passWord","status","userLogin","setUserLogin","console","log","handleChange","event","target","name","value","newUserLogin","valid","key","trim","onSubmit","preventDefault","history","goBack","localStorage","setItem","JSON","stringify","alert","onChange","when","message","location","PageNotFound","url","Profile","getItem","Todolist","state","taskList","values","taskName","errors","getTaskList","promise","Axios","method","then","result","setState","data","catch","err","response","renderTaskToDo","filter","item","map","index","onClick","delTask","checkTask","renderTaskToDoDone","rejectTask","res","e","newValues","newErrors","test","addTask","this","Component","TodolistRFC","useEffect","App","exact","component","Boolean","window","hostname","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"gPAGe,SAASA,IAGpB,OACI,sBAAKC,UAAU,8CAAf,UACI,cAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,IAArC,wBACA,wBAAQD,UAAU,2BAA2BE,KAAK,SAAS,cAAY,WAAW,cAAY,oBAAoB,gBAAc,mBAAmB,gBAAc,QAAQ,aAAW,sBACpL,sBAAKF,UAAU,2BAA2BG,GAAG,mBAA7C,UACI,qBAAIH,UAAU,kCAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUN,UAAU,WAAWC,GAAG,QAAtG,qBAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUN,UAAU,WAAWC,GAAG,SAAtG,qBAEJ,oBAAID,UAAU,oBAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUN,UAAU,WAAWC,GAAG,WAAtG,uBAEJ,oBAAID,UAAU,oBAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUN,UAAU,WAAWC,GAAG,SAAtG,qBAEJ,oBAAID,UAAU,oBAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,gBAAgBC,YAAa,CAAEC,WAAY,QAAUN,UAAU,WAAWC,GAAG,WAAtG,uBAGJ,qBAAID,UAAU,oBAAd,UACI,mBAAGA,UAAU,2BAA2BO,KAAK,IAAIJ,GAAG,aAAa,cAAY,WAAW,gBAAc,OAAO,gBAAc,QAA3H,6BACA,sBAAKH,UAAU,gBAAgB,kBAAgB,aAA/C,UACI,cAAC,IAAD,CAASA,UAAU,gBAAgBC,GAAG,eAAtC,4BACA,cAAC,IAAD,CAASD,UAAU,gBAAgBC,GAAG,eAAtC,qCAKZ,uBAAMD,UAAU,2BAAhB,UACI,uBAAOA,UAAU,uBAAuBE,KAAK,OAAOM,YAAY,WAChE,wBAAQR,UAAU,uCAAuCE,KAAK,SAA9D,6BCrCL,SAASO,IACpB,OACI,wCCFO,SAASC,IACpB,OACI,kDCFO,SAASC,EAAOC,GAE3B,OACI,iEACsBA,EAAMC,MAAMC,OAAOX,GACrC,uBAFJ,iCAGyBS,EAAMC,MAAME,QCN9B,SAASC,EAAKJ,GACzB,OACI,iD,2BCEO,SAASK,EAAML,GAE1B,MAAiCM,mBAAS,CAACC,SAAS,GAAGC,SAAS,GAAGC,QAAO,IAA1E,mBAAOC,EAAP,KAAiBC,EAAjB,KAGAC,QAAQC,IAAIH,GACZ,IAAMI,EAAe,SAACC,GAClB,MAAqBA,EAAMC,OAApBC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MAENC,EAAY,2BACXT,GADW,kBAEbO,EAAMC,IAIPE,GAAQ,EACZ,IAAI,IAAIC,KAAOF,EACA,WAARE,GAC+B,KAA3BF,EAAaE,GAAKC,SACjBF,GAAQ,GAQhBD,EAAaV,QAHbW,EAMJT,EAAaQ,IAsBjB,OACI,uBAAM/B,UAAU,YAAYmC,SApBZ,SAACR,GACjBA,EAAMS,iBACoB,eAAvBd,EAAUH,UAAkD,eAArBG,EAAUF,UAQhDR,EAAMyB,QAAQC,SACdC,aAAaC,QAAQ,YAAYC,KAAKC,UAAUpB,KAGhDqB,MAAM,iBAMV,UACI,oBAAI3C,UAAU,YAAd,mBACA,sBAAKA,UAAU,aAAf,UACI,0CACA,uBAAO6B,KAAK,WAAW7B,UAAU,eAAe4C,SAAUlB,OAE9D,sBAAK1B,UAAU,aAAf,UACI,yCACA,uBAAO6B,KAAK,WAAW7B,UAAU,eAAe4C,SAAUlB,OAE9D,qBAAK1B,UAAU,aAAf,SACG,wBAAQA,UAAU,kBAAlB,wCAEH,cAAC,IAAD,CAAQ6C,KAAMvB,EAAUD,OAAQyB,QAAS,SAACC,GACtC,MAAO,6ECvER,SAASC,EAAapC,GACjC,OACI,mEAC0BA,EAAMC,MAAMoC,OCF/B,SAASC,EAAQtC,GAG5B,OAAI2B,aAAaY,QAAQ,aAEjB,2CAKJR,MAAM,2EACC,cAAC,IAAD,CAAU1C,GAAG,Y,qDCXPmD,G,kNACnBC,MAAQ,CACNC,SAAU,GACVC,OAAQ,CACNC,SAAU,IAEZC,OAAQ,CACND,SAAU,K,EAIdE,YAAc,WACZ,IAAIC,EAAUC,IAAM,CAClBX,IAAK,iDACLY,OAAQ,QAGVF,EAAQG,MAAK,SAACC,GAGZ,EAAKC,SAAS,CACZV,SAAUS,EAAOE,UAKrBN,EAAQO,OAAM,SAACC,GACb3C,QAAQC,IAAI0C,EAAIC,SAASH,U,EAI7BI,eAAiB,WACf,OAAO,EAAKhB,MAAMC,SACfgB,QAAO,SAACC,GAAD,OAAWA,EAAKlD,UACvBmD,KAAI,SAACD,EAAME,GACV,OACE,+BACE,+BAAOF,EAAKf,WACZ,sBAAKxD,UAAU,UAAf,UACE,wBACEA,UAAU,SACVE,KAAK,SACLwE,QAAS,WACP,EAAKC,QAAQJ,EAAKf,WAJtB,SAOE,mBAAGxD,UAAU,sBAEf,yBACEE,KAAK,SACLF,UAAU,WACV0E,QAAS,WACP,EAAKE,UAAUL,EAAKf,WAJxB,UAOE,mBAAGxD,UAAU,wBACb,mBAAGA,UAAU,gCApBVyE,O,EA4BjBI,mBAAqB,WACnB,OAAO,EAAKxB,MAAMC,SACfgB,QAAO,SAACC,GAAD,OAAUA,EAAKlD,UACtBmD,KAAI,SAACD,EAAME,GACV,OACE,+BACE,+BAAOF,EAAKf,WACZ,sBAAKxD,UAAU,UAAf,UACE,wBACEA,UAAU,SACVE,KAAK,SACLwE,QAAS,WACP,EAAKC,QAAQJ,EAAKf,WAJtB,SAOE,mBAAGxD,UAAU,sBAEf,yBACEE,KAAK,SACLF,UAAU,WACV0E,QAAS,WACP,EAAKI,WAAWP,EAAKf,WAJzB,UAOE,mBAAGxD,UAAU,gBACb,mBAAGA,UAAU,wBApBVyE,O,EA6BjBK,WAAa,SAACtB,GACZ,IAAIG,EAAUC,IAAM,CAClBX,IAAI,2DAAD,OAA6DO,GAChEK,OAAQ,QAGVF,EAAQG,MAAK,SAACiB,GACZpC,MAAMoC,EAAId,MACV,EAAKP,iBAGPC,EAAQO,OAAM,SAACC,GACbxB,MAAMwB,EAAIC,SAASH,U,EAKvBW,UAAY,SAACpB,GACX,IAAIG,EAAUC,IAAM,CAClBX,IAAI,yDAAD,OAA2DO,GAC9DK,OAAQ,QAGVF,EAAQG,MAAK,SAACiB,GACZpC,MAAMoC,EAAId,MACV,EAAKP,iBAGPC,EAAQO,OAAM,SAACC,GACbxB,MAAMwB,EAAIC,SAASH,U,EAKvBU,QAAU,SAACnB,GACT,IAAIG,EAAUC,IAAM,CAClBX,IAAI,2DAAD,OAA6DO,GAChEK,OAAQ,WAGVF,EAAQG,MAAK,SAACC,GACZpB,MAAMoB,EAAOE,MACb,EAAKP,iBAGPC,EAAQO,OAAM,SAACT,GACbd,MAAMc,EAAOW,SAASH,U,EAS1BvC,aAAe,SAACsD,GACd,MAAsBA,EAAEpD,OAAlBE,EAAN,EAAMA,MAAOD,EAAb,EAAaA,KACbL,QAAQC,IAAIK,EAAOD,GACnB,IAAIoD,EAAS,eAAQ,EAAK5B,MAAME,QAEhC0B,EAAS,2BAAQA,GAAR,kBAAoBpD,EAAOC,IAEpC,IAAIoD,EAAS,eAAQ,EAAK7B,MAAMI,QAEd,eAED0B,KAAKrD,IAA2B,KAAjBA,EAAMI,OAGpCgD,EAAUrD,GAAQ,GAFlBqD,EAAUrD,GAAQA,EAAO,aAK3B,EAAKmC,SAAL,2BACK,EAAKX,OADV,IAEEE,OAAQ0B,EACRxB,OAAQyB,M,EAIZE,QAAU,SAACJ,GACTA,EAAE5C,iBACFZ,QAAQC,IAAI,EAAK4B,MAAME,OAAOC,UAE9B,IAAIG,EAAUC,IAAM,CAClBX,IAAK,8CACLY,OAAQ,OACRI,KAAM,CAAET,SAAU,EAAKH,MAAME,OAAOC,YAItCG,EAAQG,MAAK,SAACC,GAEZ,EAAKL,iBAIPC,EAAQO,OAAM,SAACT,GACbd,MAAMc,EAAOW,SAASH,U,uDA9C1B,WACEoB,KAAK3B,gB,oBAiDP,WACE,OACE,sBAAMvB,SAAUkD,KAAKD,QAArB,SAEE,sBAAKpF,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAGf,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0CACA,oDAEF,sBAAKA,UAAU,YAAf,UACE,uBACE6B,KAAK,WACLe,SAAUyC,KAAK3D,aACfvB,GAAG,UACHD,KAAK,OACLM,YAAY,yBAGd,wBAAQL,GAAG,UAAUuE,QAASW,KAAKD,QAAnC,SACE,mBAAGpF,UAAU,oBAGjB,sBAAMA,UAAU,mBAAhB,SACGqF,KAAKhC,MAAMI,OAAOD,cAIvB,sBAAKxD,UAAU,wBAAf,UAEE,oBAAIA,UAAU,OAAOG,GAAG,OAAxB,SACGkF,KAAKhB,mBAGR,oBAAIrE,UAAU,OAAOG,GAAG,YAAxB,SACGkF,KAAKR,wC,GA/OcS,cCAvB,SAASC,EAAY3E,GAClC,MAAwBM,mBAAS,CAC/BoC,SAAU,GACVC,OAAQ,CACNC,SAAU,IAEZC,OAAQ,CACND,SAAU,MANd,mBAAKH,EAAL,KAAYW,EAAZ,KAiCMN,EAAc,WAClB,IAAIC,EAAUC,IAAM,CAClBX,IAAK,iDACLY,OAAQ,QAGVF,EAAQG,MAAK,SAACC,GAGZC,EAAS,2BACJX,GADG,IAENC,SAAUS,EAAOE,WAIrBN,EAAQO,OAAM,SAACC,GACb3C,QAAQC,IAAI0C,EAAIC,SAASH,UAIvBmB,EAAU,SAACJ,GACfA,EAAE5C,iBACF4C,EAAE5C,iBACF,IAAIuB,EAAUC,IAAM,CAClBX,IAAK,8CACLY,OAAQ,OACRI,KAAM,CAAET,SAAUH,EAAME,OAAOC,YAIjCG,EAAQG,MAAK,SAACC,GAEZL,OAIFC,EAAQO,OAAM,SAACT,GACbd,MAAMc,EAAOW,SAASH,UAI1BuB,qBAAU,WAGR,OAFA9B,IAEO,eACN,IAGH,IAkCMiB,EAAU,SAACnB,GACf,IAAIG,EAAUC,IAAM,CAClBX,IAAI,2DAAD,OAA6DO,GAChEK,OAAQ,WAGVF,EAAQG,MAAK,SAACC,GACZpB,MAAMoB,EAAOE,MACbP,OAGFC,EAAQO,OAAM,SAACT,GACbd,MAAMc,EAAOW,SAASH,UAsE1B,OACE,sBAAKjE,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAGf,sBAAMA,UAAU,aAAamC,SAAUiD,EAAvC,SACE,sBAAKpF,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0CACA,oDAEF,sBAAKA,UAAU,YAAf,UACE,uBACEG,GAAG,UACH0B,KAAK,WACL3B,KAAK,OACLM,YAAY,uBACZoC,SA5MS,SAACoC,GACpB,MAAsBA,EAAEpD,OAAlBE,EAAN,EAAMA,MAAOD,EAAb,EAAaA,KACToD,EAAS,eAAQ5B,EAAME,QAE3B0B,EAAS,2BAAQA,GAAR,kBAAoBpD,EAAOC,IAEpC,IAAIoD,EAAS,eAAQ7B,EAAMI,QAET,eAED0B,KAAKrD,IAA2B,KAAjBA,EAAMI,OAGpCgD,EAAUrD,GAAQ,GAFlBqD,EAAUrD,GAAQA,EAAO,aAK3BmC,EAAS,2BACJX,GADG,IAENE,OAAQ0B,EACRxB,OAAQyB,QA2LF,wBAAQ/E,GAAG,UAAUD,KAAK,SAASwE,QAASU,EAA5C,SACE,mBAAGpF,UAAU,oBAGjB,sBAAKA,UAAU,aAAf,UAEE,oBAAIA,UAAU,OAAOG,GAAG,OAAxB,SA1FDkD,EAAMC,SACVgB,QAAO,SAACC,GAAD,OAAWA,EAAKlD,UACvBmD,KAAI,SAACD,EAAME,GACV,OACE,+BACE,+BAAOF,EAAKf,WACZ,sBAAKxD,UAAU,UAAf,UACE,wBACEA,UAAU,SACVE,KAAK,SACLwE,QAAS,WACPC,EAAQJ,EAAKf,WAJjB,SAOE,mBAAGxD,UAAU,sBAEf,yBACEE,KAAK,SACLF,UAAU,WACV0E,QAAS,YArDL,SAAClB,GACjB,IAAIG,EAAUC,IAAM,CAClBX,IAAI,yDAAD,OAA2DO,GAC9DK,OAAQ,QAGVF,EAAQG,MAAK,SAACiB,GACZpC,MAAMoC,EAAId,MACVP,OAGFC,EAAQO,OAAM,SAACC,GACbxB,MAAMwB,EAAIC,SAASH,SA0CPW,CAAUL,EAAKf,WAJnB,UAOE,mBAAGxD,UAAU,wBACb,mBAAGA,UAAU,gCApBVyE,QA0FP,oBAAIzE,UAAU,OAAOG,GAAG,YAAxB,SA7DDkD,EAAMC,SACVgB,QAAO,SAACC,GAAD,OAAUA,EAAKlD,UACtBmD,KAAI,SAACD,EAAME,GACV,OACE,+BACE,+BAAOF,EAAKf,WACZ,sBAAKxD,UAAU,UAAf,UACE,wBACEA,UAAU,SACVE,KAAK,SACLwE,QAAS,WACPC,EAAQJ,EAAKf,WAJjB,SAOE,mBAAGxD,UAAU,sBAEf,yBACEE,KAAK,SACLF,UAAU,WACV0E,QAAS,YAvGJ,SAAClB,GAClB,IAAIG,EAAUC,IAAM,CAClBX,IAAI,2DAAD,OAA6DO,GAChEK,OAAQ,QAGVF,EAAQG,MAAK,SAACiB,GACZpC,MAAMoC,EAAId,MACVP,OAGFC,EAAQO,OAAM,SAACC,GACbxB,MAAMwB,EAAIC,SAASH,SA4FPa,CAAWP,EAAKf,WAJpB,UAOE,mBAAGxD,UAAU,gBACb,mBAAGA,UAAU,wBApBVyE,mBCxIJgB,MAxBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,OAAK,EAAC3E,KAAK,QAAQ4E,UAAW3E,IACrC,cAAC,IAAD,CAAO0E,OAAK,EAAC3E,KAAK,WAAW4E,UAAWjF,IACxC,cAAC,IAAD,CAAOgF,OAAK,EAAC3E,KAAK,SAAS4E,UAAWlF,IACtC,cAAC,IAAD,CAAOiF,OAAK,EAAC3E,KAAK,SAAS4E,UAAW1E,IACtC,cAAC,IAAD,CAAOyE,OAAK,EAAC3E,KAAK,cAAc4E,UAAWhF,IAC3C,cAAC,IAAD,CAAO+E,OAAK,EAAC3E,KAAK,WAAW4E,UAAWzC,IACxC,cAAC,IAAD,CAAOwC,OAAK,EAAC3E,KAAK,eAAe4E,UAAWJ,IAC5C,cAAC,IAAD,CAAOG,OAAK,EAAC3E,KAAK,eAAe4E,UAAWvC,IAE5C,cAAC,IAAD,CAAOsC,OAAK,EAAC3E,KAAK,IAAI4E,UAAW3E,IACjC,cAAC,IAAD,CAAOD,KAAK,IAAI4E,UAAW3C,WCjBf4C,QACW,cAA7BC,OAAO9C,SAAS+C,UAEe,UAA7BD,OAAO9C,SAAS+C,UAEhBD,OAAO9C,SAAS+C,SAASjF,MACvB,2D,YCZAkF,EAAcC,YAAgB,IAWrBC,EALDC,YAAYH,G,QCJ1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,SFuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3C,MAAK,SAAA4C,GACJA,EAAaC,gBAEdzC,OAAM,SAAA0C,GACLpF,QAAQoF,MAAMA,EAAM9D,c","file":"static/js/main.80b4bdd6.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nexport default function Header() {\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\n                    </li>\n                   \n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\n                        </div>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Contact() {\n    return (\n        <div>\n            liên hệ\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Detail(props) {\n\n    return (\n        <div>\n            Giá trị tham số: {props.match.params.id}\n            <br />\n            Path name hiện tại: {props.match.path}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Home(props) {\n    return (\n        <div>\n            trang chủ\n        </div>\n    )\n}\n\n\n\n","import React, { useState } from 'react'\nimport { Prompt } from 'react-router-dom';\n\n\n\n\nexport default function Login(props) {\n\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\n\n\n    console.log(userLogin)\n    const handleChange = (event) => {\n        const {name,value} = event.target;\n\n        const newUserLogin = {\n            ...userLogin,\n            [name]:value\n        };\n\n\n        let valid = true;\n        for(let key in newUserLogin) {\n            if(key !== 'status') {\n                if(newUserLogin[key].trim()===''){\n                    valid = false;\n                }\n            }\n        }\n\n        if(!valid) {\n            newUserLogin.status = true;\n        }else {\n            newUserLogin.status = false;\n        }\n\n        setUserLogin(newUserLogin);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\n            //Thành công thì chuyển về trang trước đó\n            // props.history.goBack();\n            //Chuyển đến trang chỉ định sau khi xử lý\n            // Chuyển hướng đến path tương ứng\n            //  props.history.push('/home');\n            //replace thay đổi nội dung path tương ứng\n            // props.history.replace('/home');\n            props.history.goBack();\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\n\n        }else {\n            alert('Login fail !')\n            return;\n        }\n    }\n\n    return (\n        <form className=\"container\" onSubmit={handleLogin}>\n            <h3 className=\"display-4\">Login</h3>\n            <div className=\"form-group\">\n                <p>User Name</p>\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n                <p>Password</p>\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n               <button className=\"btn btn-success\">Đăng nhập</button>\n            </div>\n            <Prompt when={userLogin.status} message={(location) => {\n                return 'Bạn có chắc muốn rời khỏi trang này !'\n            }} />\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function PageNotFound(props) {\n    return (\n        <div>\n            Không tìm thấy trang {props.match.url}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Profile(props) {\n\n\n    if (localStorage.getItem('userLogin')) {\n        return (\n            <div>\n                profile\n            </div>\n        )\n    }else {\n        alert('Vui lòng đăng nhập để vào trang này !');\n        return <Redirect to=\"/login\" />\n    }\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport './Todolist.css';\nexport default class Todolist extends Component {\n  state = {\n    taskList: [],\n    values: {\n      taskName: \"\",\n    },\n    errors: {\n      taskName: \"\",\n    },\n  };\n\n  getTaskList = () => {\n    let promise = Axios({\n      url: \"http://svcy.myclass.vn/api/ToDoList/GetAllTask\",\n      method: \"GET\",\n    });\n\n    promise.then((result) => {\n      //Nếu gọi api lấy về kết quả thành công\n      //=> set lại state của component\n      this.setState({\n        taskList: result.data,\n      });\n\n    });\n\n    promise.catch((err) => {\n      console.log(err.response.data);\n    });\n  };\n\n  renderTaskToDo = () => {\n    return this.state.taskList\n      .filter((item) => !item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  this.delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  this.checkTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-check-circle\" />\n                <i className=\"fas fa-check-circle\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  renderTaskToDoDone = () => {\n    return this.state.taskList\n      .filter((item) => item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  this.delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  this.rejectTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-undo\" />\n                <i className=\"fas fa-undo\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  //Xử lý reject task\n  rejectTask = (taskName) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n      method: \"PUT\",\n    });\n\n    promise.then((res) => {\n      alert(res.data);\n      this.getTaskList();\n    });\n\n    promise.catch((err) => {\n      alert(err.response.data);\n    });\n  };\n\n  //Xử lý done task\n  checkTask = (taskName) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n      method: \"PUT\",\n    });\n\n    promise.then((res) => {\n      alert(res.data);\n      this.getTaskList();\n    });\n\n    promise.catch((err) => {\n      alert(err.response.data);\n    });\n  };\n\n  //Hàm xử lý xóa task\n  delTask = (taskName) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n      method: \"DELETE\",\n    });\n\n    promise.then((result) => {\n      alert(result.data);\n      this.getTaskList();\n    });\n\n    promise.catch((errors) => {\n      alert(errors.response.data);\n    });\n  };\n\n  //Hàm sẽ tự động thực thi sau khi nội dung component được render\n  componentDidMount() {\n    this.getTaskList();\n  }\n\n  handleChange = (e) => {\n    let { value, name } = e.target;\n    console.log(value, name);\n    let newValues = { ...this.state.values };\n\n    newValues = { ...newValues, [name]: value };\n\n    let newErrors = { ...this.state.errors };\n\n    let regexString = /^[a-z A-Z]+$/;\n\n    if (!regexString.test(value) || value.trim() === \"\") {\n      newErrors[name] = name + \" invalid !\";\n    } else {\n      newErrors[name] = \"\";\n    }\n\n    this.setState({\n      ...this.state,\n      values: newValues,\n      errors: newErrors,\n    });\n  };\n\n  addTask = (e) => {\n    e.preventDefault(); //Dừng sự kiện submit form\n    console.log(this.state.values.taskName);\n\n    let promise = Axios({\n      url: \"http://svcy.myclass.vn/api/ToDoList/AddTask\",\n      method: \"POST\",\n      data: { taskName: this.state.values.taskName },\n    });\n\n    //Xử lý thành công\n    promise.then((result) => {\n      // alert(result.data);\n      this.getTaskList();\n    });\n\n    //Xử lý thất bại\n    promise.catch((errors) => {\n      alert(errors.response.data);\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.addTask}>\n        {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\n        <div className=\"card\">\n          <div className=\"card__header\">\n          </div>\n          {/* <h2>hello!</h2> */}\n          <div className=\"card__body\">\n            <div className=\"card__content\">\n              <div className=\"form-group\">\n                <div className=\"card__title\">\n                  <h2>My Tasks</h2>\n                  <p>September 9,2020</p>\n                </div>\n                <div className=\"card__add\">\n                  <input\n                    name=\"taskName\"\n                    onChange={this.handleChange}\n                    id=\"newTask\"\n                    type=\"text\"\n                    placeholder=\"Enter an activity...\"\n                  />\n\n                  <button id=\"addItem\" onClick={this.addTask}>\n                    <i className=\"fa fa-plus\" />\n                  </button>\n                </div>\n                <span className=\"text text-danger\">\n                  {this.state.errors.taskName}\n                </span>\n              </div>\n\n              <div className=\"card__todo form-group\">\n                {/* Uncompleted tasks */}\n                <ul className=\"todo\" id=\"todo\">\n                  {this.renderTaskToDo()}\n                </ul>\n                {/* Completed tasks */}\n                <ul className=\"todo\" id=\"completed\">\n                  {this.renderTaskToDoDone()}\n\n                  {/* <li>\n                                    <span>Ăn sáng</span>\n                                    <div className=\"buttons\">\n                                        <button className=\"remove\">\n                                            <i className=\"fa fa-trash-alt\" />\n                                        </button>\n                                        <button className=\"complete\">\n                                            <i className=\"far fa-check-circle\" />\n                                            <i className=\"fas fa-check-circle\" />\n                                        </button>\n                                    </div>\n                                </li> */}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function TodolistRFC(props) {\n  let [state, setState] = useState({\n    taskList: [],\n    values: {\n      taskName: \"\",\n    },\n    errors: {\n      taskName: \"\",\n    },\n  });\n\n  const handleChange = (e) => {\n    let { value, name } = e.target;\n    let newValues = { ...state.values };\n\n    newValues = { ...newValues, [name]: value };\n\n    let newErrors = { ...state.errors };\n\n    let regexString = /^[a-z A-Z]+$/;\n\n    if (!regexString.test(value) || value.trim() === \"\") {\n      newErrors[name] = name + \" invalid !\";\n    } else {\n      newErrors[name] = \"\";\n    }\n\n    setState({\n      ...state,\n      values: newValues,\n      errors: newErrors,\n    });\n  };\n\n  const getTaskList = () => {\n    let promise = Axios({\n      url: \"http://svcy.myclass.vn/api/ToDoList/GetAllTask\",\n      method: \"GET\",\n    });\n\n    promise.then((result) => {\n      //Nếu gọi api lấy về kết quả thành công\n      //=> set lại state của component\n      setState({\n        ...state,\n        taskList: result.data,\n      });\n    });\n\n    promise.catch((err) => {\n      console.log(err.response.data);\n    });\n  };\n\n  const addTask = (e) => {\n    e.preventDefault(); //Chặn sự kiện reload lại trang\n    e.preventDefault(); //Dừng sự kiện submit form\n    let promise = Axios({\n      url: \"http://svcy.myclass.vn/api/ToDoList/AddTask\",\n      method: \"POST\",\n      data: { taskName: state.values.taskName },\n    });\n\n    //Xử lý thành công\n    promise.then((result) => {\n      // alert(result.data);\n      getTaskList();\n    });\n\n    //Xử lý thất bại\n    promise.catch((errors) => {\n      alert(errors.response.data);\n    });\n  };\n\n  useEffect(() => {\n    getTaskList();\n\n    return () => {};\n  }, [] );\n\n  //Xử lý reject task\n  const rejectTask = (taskName) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n      method: \"PUT\",\n    });\n\n    promise.then((res) => {\n      alert(res.data);\n      getTaskList();\n    });\n\n    promise.catch((err) => {\n      alert(err.response.data);\n    });\n  };\n\n  //Xử lý done task\n  const checkTask = (taskName) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n      method: \"PUT\",\n    });\n\n    promise.then((res) => {\n      alert(res.data);\n      getTaskList();\n    });\n\n    promise.catch((err) => {\n      alert(err.response.data);\n    });\n  };\n\n  //Hàm xử lý xóa task\n  const delTask = (taskName) => {\n    let promise = Axios({\n      url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n      method: \"DELETE\",\n    });\n\n    promise.then((result) => {\n      alert(result.data);\n      getTaskList();\n    });\n\n    promise.catch((errors) => {\n      alert(errors.response.data);\n    });\n  };\n\n  const renderTaskToDo = () => {\n    return state.taskList\n      .filter((item) => !item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  checkTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-check-circle\" />\n                <i className=\"fas fa-check-circle\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  const renderTaskToDoDone = () => {\n    return state.taskList\n      .filter((item) => item.status)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <span>{item.taskName}</span>\n            <div className=\"buttons\">\n              <button\n                className=\"remove\"\n                type=\"button\"\n                onClick={() => {\n                  delTask(item.taskName);\n                }}\n              >\n                <i className=\"fa fa-trash-alt\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"complete\"\n                onClick={() => {\n                  rejectTask(item.taskName);\n                }}\n              >\n                <i className=\"far fa-undo\" />\n                <i className=\"fas fa-undo\" />\n              </button>\n            </div>\n          </li>\n        );\n      });\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n      </div>\n      {/* <h2>hello!</h2> */}\n      <form className=\"card__body\" onSubmit={addTask}>\n        <div className=\"card__content\">\n          <div className=\"card__title\">\n            <h2>My Tasks</h2>\n            <p>September 9,2020</p>\n          </div>\n          <div className=\"card__add\">\n            <input\n              id=\"newTask\"\n              name=\"taskName\"\n              type=\"text\"\n              placeholder=\"Enter an activity...\"\n              onChange={handleChange}\n            />\n            <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n              <i className=\"fa fa-plus\" />\n            </button>\n          </div>\n          <div className=\"card__todo\">\n            {/* Uncompleted tasks */}\n            <ul className=\"todo\" id=\"todo\">\n              {renderTaskToDo()}\n            </ul>\n            {/* Completed tasks */}\n            <ul className=\"todo\" id=\"completed\">\n              {renderTaskToDoDone()}\n            </ul>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Home/Header/Header';\nimport About from './pages/About/About';\nimport Contact from './pages/Contact/Contact';\nimport Detail from './pages/Detail/Detail';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\nimport Profile from './pages/Profile/Profile';\nimport Todolist from './pages/TodoList/Todolist';\nimport TodolistRFC from './pages/TodoList/TodolistRFC';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        \n        <Route exact path='/home' component={Home} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/detail/:id' component={Detail} />\n        <Route exact path='/profile' component={Profile} />\n        <Route exact path='/todolistrfc' component={TodolistRFC} />\n        <Route exact path='/todolistrcc' component={Todolist} />\n\n        <Route exact path='/' component={Home} />\n        <Route path=\"*\" component={PageNotFound}/>\n\n      </Switch>\n  \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from 'redux';\n\n\n\n\n\nconst rootReducer = combineReducers({\n    //reducer khai báo tại đây\n})\n\n\n\nconst store = createStore(rootReducer);\n\n\n\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//setup redux\nimport store from './redux/ConfigStore';\nimport { Provider } from 'react-redux';\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}